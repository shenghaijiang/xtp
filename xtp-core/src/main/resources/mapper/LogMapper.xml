<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xtits.xtp.mapper.LogMapper">
    <resultMap id="BaseResultMap" type="cn.xtits.xtp.entity.Log">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="Id" jdbcType="INTEGER" property="id"/>
        <result column="Type" jdbcType="VARCHAR" property="type"/>
        <result column="Centent" jdbcType="VARCHAR" property="centent"/>
        <result column="UserId" jdbcType="INTEGER" property="userId"/>
        <result column="UserName" jdbcType="VARCHAR" property="userName"/>
        <result column="CreateDate" jdbcType="VARCHAR" property="createDate"/>
        <result column="IP" jdbcType="VARCHAR" property="IP"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        Id, Type, Centent, UserId, UserName, CreateDate, IP
    </sql>
    <select id="selectByExample" parameterType="cn.xtits.xtp.entity.LogExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from `log`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from `log`
        where Id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from `log`
        where Id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="cn.xtits.xtp.entity.Log">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into `log` (Type, Centent, UserId,
        UserName, CreateDate, IP
        )
        values (#{type,jdbcType=VARCHAR}, #{centent,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER},
        #{userName,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR}, #{IP,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.xtits.xtp.entity.Log">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into `log`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="type != null">
                Type,
            </if>
            <if test="centent != null">
                Centent,
            </if>
            <if test="userId != null">
                UserId,
            </if>
            <if test="userName != null">
                UserName,
            </if>
            <if test="createDate != null">
                CreateDate,
            </if>
            <if test="IP != null">
                IP,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="centent != null">
                #{centent,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=VARCHAR},
            </if>
            <if test="IP != null">
                #{IP,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.xtits.xtp.entity.LogExample" resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from `log`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update `log`
        <set>
            <if test="record.id != null">
                Id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                Type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.centent != null">
                Centent = #{record.centent,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                UserId = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.userName != null">
                UserName = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null">
                CreateDate = #{record.createDate,jdbcType=VARCHAR},
            </if>
            <if test="record.IP != null">
                IP = #{record.IP,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update `log`
        set Id = #{record.id,jdbcType=INTEGER},
        Type = #{record.type,jdbcType=VARCHAR},
        Centent = #{record.centent,jdbcType=VARCHAR},
        UserId = #{record.userId,jdbcType=INTEGER},
        UserName = #{record.userName,jdbcType=VARCHAR},
        CreateDate = #{record.createDate,jdbcType=VARCHAR},
        IP = #{record.IP,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.xtits.xtp.entity.Log">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update `log`
        <set>
            <if test="type != null">
                Type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="centent != null">
                Centent = #{centent,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                UserId = #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                UserName = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                CreateDate = #{createDate,jdbcType=VARCHAR},
            </if>
            <if test="IP != null">
                IP = #{IP,jdbcType=VARCHAR},
            </if>
        </set>
        where Id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.xtits.xtp.entity.Log">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update `log`
        set Type = #{type,jdbcType=VARCHAR},
        Centent = #{centent,jdbcType=VARCHAR},
        UserId = #{userId,jdbcType=INTEGER},
        UserName = #{userName,jdbcType=VARCHAR},
        CreateDate = #{createDate,jdbcType=VARCHAR},
        IP = #{IP,jdbcType=VARCHAR}
        where Id = #{id,jdbcType=INTEGER}
    </update>
</mapper>